plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id "com.github.node-gradle.node" version "5.0.0"
}

group = 'com.eduardominarelli'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

node {
	download = true
	version = "18.16.1"
	nodeProjectDir = file("${project.projectDir}/frontend-app")
}

//tasks.register('npmInstall', NpmTask) {
//	workingDir "frontend-app"
//	args = [ 'run', 'build' ]
//	doLast {
//		println 'npm install executed successfully'
//	}
//}

tasks.register('npmBuild', NpmTask) {
	args = [ 'run', 'build' ]
	doLast {
		println 'npm run build executed successfully'
	}
}

npmBuild.mustRunAfter npmInstall

//[bootRun, build].each { it.dependsOn([npmInstall, npmBuild]) }

tasks.named('compileJava') {
	dependsOn(':npmBuild')
}